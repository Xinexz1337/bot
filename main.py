import telebot
import types
from telebot import types
import requests
from bs4 import BeautifulSoup
import time
import schedule
import binance_price
from parser import url, title


bot = telebot.TeleBot('6509823360:AAH-CkpjqKIixLEXj1vGCvTevxKHyZKYrWE')
id_chanel = '@studianews'


#–∫–æ–º–∞–Ω–¥–∞ —Ö–µ–ª–ø
@bot.message_handler(commands=['help'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    help = types.KeyboardButton('/start')
    markup.add(help)
    mess = 'üõéÔ∏è–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –º–æ—è –ø–æ–º–æ—â—å, –ø–∏—à–∏ —Å—é–¥–∞ --> @daniil_adams'
    bot.send_message(message.chat.id, mess, reply_markup=markup)

#–∫–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    mess = 'üëã–ü—Ä–∏–≤–µ—Ç –¥—Ä—É–≥, —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —á—Ç–æ –±—ã —Å–º–æ—Ç—Ä–µ—Ç—å —Å–∞–º—ã–µ —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤ —ç—Ç–æ–º @studianews —Ç–≥–∫. ' \
           '–ù–∞–ø–∏—à–∏ "/chek" —á—Ç–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ Crypto.' \
           '\n\n–ï—Å–ª–∏ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫—Ä–∏–ø—Ç–∞ –≤ —Å—Ä–æ—á–Ω–æ–º –æ–±—Ä–∞–∑–µ, —Ç–æ–≥–¥–∞ —Å–æ–≤–µ—Ç—É—é –≤—ã–±—Ä–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é "/send_crypto"' \
           '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ç–µ–±–µ —Å–∫–∏–¥—ã–≤–∞—Ç—å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Ü–µ–Ω—É –∫—Ä–∏–ø—Ç—ã' \
           '\n\n –ï—Å–ª–∏ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Ä–∞–∑–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥, –∞ –Ω–µ —Å–ø–∞–º, —Ç–æ–≥–¥–∞ –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "/crypto"' \
           '–û–Ω–æ –í–∞–º –ø–æ–∫–∞–∂–µ—Ç —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É –∫—Ä–∏–ø—Ç—ã.' \
           '\n\n‚ùó–ï—Å–ª–∏ —á—Ç–æ —Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, –ø–∏—à–∏ "/help"'
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    chek = types.KeyboardButton('/chek')
    markup.add(crypto_send, crypro_spam, chek, help)
    bot.send_message(message.chat.id, mess, reply_markup=markup)


#–æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã –∫—Ä–∏–ø—Ç—ã –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫
@bot.message_handler(commands=['send_crypto'])
def crypto_spam(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        stop = types.KeyboardButton('/stop')
        markup.add(stop)
        mess = '‚ùó–ß—Ç–æ –±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ø–∞–º, –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É "/stop"'
        bot.send_message(message.chat.id, mess, reply_markup=markup)
        binance_price.spam = True
        while binance_price.spam:
                price_crypto()
                time.sleep(5)

#—Å–∏—Å—Ç–µ–º–∞ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–æ–ø
@bot.message_handler(commands=['stop'])
def stop(message):
    if binance_price.spam == False:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        chek = types.KeyboardButton('/chek')
        help = types.KeyboardButton('/help')
        crypro_spam = types.KeyboardButton('/send_crypto')
        crypto_send = types.KeyboardButton('/crypto')
        markup.add(crypto_send, crypro_spam, chek, help)
        bot.send_message(message.chat.id, '‚ÄºÔ∏è –ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—ã, –≤—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å', reply_markup=markup)

    while binance_price.spam == True:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        chek = types.KeyboardButton('/chek')
        help = types.KeyboardButton('/help')
        crypro_spam = types.KeyboardButton('/send_crypto')
        crypto_send = types.KeyboardButton('/crypto')
        markup.add(crypto_send, crypro_spam, chek, help)
        mess = ("‚úî–û—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è :)" + "\n–ú–æ–≥—É –ª–∏ —è —Ç–µ–±–µ –µ—â—ë —á–µ–º-—Ç–æ –ø–æ–º–æ—á—å, –µ—Å–ª–∏ –¥–∞, —Ç–æ" +
                                        " –≤—ã–±–µ—Ä–∏ –ª—é–±—É—é —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Ñ—É–Ω–∫—Ü–∏—é. "
                                        "\n–õ–∏–±–æ –≤—ã–±–µ—Ä–∏ '/help' –¥–ª—è –ø–æ–º–æ—â–∏")
        bot.send_message(message.chat.id, mess, reply_markup=markup)
        binance_price.spam = False



#cammands chek
@bot.message_handler(commands=['chek'])
def chek(message):
    bot.send_message(message.from_user.id, f"üìÑ –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Ç—É—Ç --> {id_chanel} üìÑ")
    bot.send_message(id_chanel, (title + f' –Ω–∞–∑–∞–¥.' + f"\nhttps://cryptonews.net" + url + f'\n\nü§ñby. @daniil_adams'))
    price_crypto()
    time.sleep(1)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, start, help)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)

#command —Årypto
@bot.message_handler(commands=['crypto'])
def crypto(message):
    bot.send_message(message.from_user.id, "üìÑ –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Ç—É—Ç --> @studianews üìÑ")
    price_crypto()
    time.sleep(1)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    chek = types.KeyboardButton('/chek')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, chek, help)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)



#—à—É—Ç–∫–∞
@bot.message_handler(commands=['admin_on'])
def admin(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    markup.add(start)
    mess = ("üêì –ù–∞–µ–±–∞–ª–∏ –í–∞—Å <3 üêì")
    bot.send_message(message.chat.id, mess, reply_markup=markup)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≥–∏—Ñ
@bot.message_handler(content_types=['animation'])
def handle_gif(message):
    bot.send_message(message.chat.id, "üñºÔ∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –≤–æ—Å–ø—Ä–æ–Ω–∏–º–∞—é GIF üñºÔ∏è")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    chek = types.KeyboardButton('/chek')
    markup.add(crypto_send, crypro_spam, start, help, chek)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∫—Ä—É–∂–æ—á–∫–æ–≤
@bot.message_handler(content_types=['video_note'])
def handle_video_note(message):
    bot.send_message(message.chat.id, "üé• –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –≤–æ—Å–ø—Ä–æ–Ω–∏–º–∞—é Video üé•")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    chek = types.KeyboardButton('/chek')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, start, help, chek)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    bot.send_message(message.chat.id, "üì∑ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –≤–æ—Å–ø—Ä–æ–Ω–∏–º–∞—é Photo üì∑")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    chek = types.KeyboardButton('/chek')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, start, help, chek)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def handle_video(message):
    bot.send_message(message.chat.id, "üé• –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –≤–æ—Å–ø—Ä–æ–Ω–∏–º–∞—é Video üé•")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    chek = types.KeyboardButton('/chek')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, start, help, chek)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –º—É–∑—ã–∫–∏
@bot.message_handler(content_types=['audio'])
def handle_audio(message):
    bot.send_message(message.chat.id, "üéß –ü–æ—Å–ª—É—à–∞—é –ø–æ–∑–∂–µ, –∞ –ø–æ–∫–∞ —è –∑–∞–Ω—è—Ç, –º–º–Ω–µ –Ω–∞–¥–æ —Ä–∞–±–æ—Ç–∞—Ç—å :) üéß")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    chek = types.KeyboardButton('/chek')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, start, help, chek)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['voice'])
def handle_voice(message):
    bot.send_message(message.chat.id, "üé§ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –≤–æ—Å–ø—Ä–æ–Ω–∏–º–∞—é Voiceüé§")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    chek = types.KeyboardButton('/chek')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, start, help, chek)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É document
@bot.message_handler(content_types=['document'])
def handle_document(message):
    bot.send_message(message.chat.id, "üìÑ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –≤–æ—Å–ø—Ä–æ–Ω–∏–º–∞—é Documents üìÑ")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    start = types.KeyboardButton('/start')
    chek = types.KeyboardButton('/chek')
    help = types.KeyboardButton('/help')
    crypro_spam = types.KeyboardButton('/send_crypto')
    crypto_send = types.KeyboardButton('/crypto')
    markup.add(crypto_send, crypro_spam, start, help, chek)
    mess = ("‚ö†Ô∏è–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.")
    bot.send_message(message.chat.id, mess, reply_markup=markup)



#–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥.
@bot.message_handler(content_types=['text'])
def commands(message):
#–ü–∏—à–µ—Ç –≤ –ö–∞–Ω–∞–ª "–Ω–æ–≤–æ—Å—Ç–∏" —Ç–æ —Å–∞–º–µ —á—Ç–æ –ø–∏—à—É –≤ –±–æ—Ç
#bot.send_message(id_chanel, message.text)


    # argument
        if (message.text == "–∞—Ä—Ç—É—Ä" ):
            with open('gif.mp4', 'rb') as video:
                bot.send_message(message.from_user.id, f"Jaka kurwa Alicija ?")
                bot.send_video(message.from_user.id, video)

        elif (message.text == '–ê—Ä—Ç—É—Ä'):
            with open('gif.mp4', 'rb') as video:
                bot.send_message(message.from_user.id, f"Jaka kurwa Alicija ?")
                bot.send_video(message.from_user.id, video)


        elif (message.text == '–º–∞–∫—Å'):
            with open('—Ä–∏—Ç–∞.jpg', 'rb') as photo:
                bot.send_message(message.from_user.id, f"–ö–∞–∫ –æ—Ü–µ–Ω–∏–∞–µ—à—å –æ—Ç 1 –¥–æ 10?")
                bot.send_photo(message.from_user.id, photo)

        elif (message.text == '–ú–∞–∫—Å'):
            with open('—Ä–∏—Ç–∞.jpg', 'rb') as photo:
                bot.send_message(message.from_user.id, f"–ö–∞–∫ –æ—Ü–µ–Ω–∏–∞–µ—à—å –æ—Ç 1 –¥–æ 10?")
                bot.send_photo(message.from_user.id, photo)

        elif (message.text == '–º–∞–∫—Å–∏–º'):
            with open('—Ä–∏—Ç–∞.jpg', 'rb') as photo:
                bot.send_message(message.from_user.id, f"–ö–∞–∫ –æ—Ü–µ–Ω–∏–∞–µ—à—å –æ—Ç 1 –¥–æ 10?")
                bot.send_photo(message.from_user.id, photo)

        elif (message.text == '–ú–∞–∫—Å–∏–º'):
            with open('—Ä–∏—Ç–∞.jpg', 'rb') as photo:
                bot.send_message(message.from_user.id, f"–ö–∞–∫ –æ—Ü–µ–Ω–∏–∞–µ—à—å –æ—Ç 1 –¥–æ 10?")
                bot.send_photo(message.from_user.id, photo)


        elif (message.text == '–¥–∞–Ω—è'):
                bot.send_message(message.from_user.id, f"Admin gamemode on")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                admin = types.KeyboardButton('/admin_on')
                markup.add(admin)
                mess = ("‚ö†Ô∏è")
                bot.send_message(message.chat.id, mess, reply_markup=markup)

        elif (message.text == '–î–∞–Ω—è'):
                bot.send_message(message.from_user.id, f"Admin gamemode on")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                admin = types.KeyboardButton('/admin_on')
                markup.add(admin)
                mess = ("‚ö†Ô∏è")
                bot.send_message(message.chat.id, mess, reply_markup=markup)

        else:
            bot.send_message(message.from_user.id, "‚ÄºÔ∏è –Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É '/chek', "
                                                 "—á—Ç–æ –±—ã —É–≤–∏–¥–µ—Ç—å –Ω–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ Crypto.."
                                                 "\n–õ–∏–±–æ –∫–æ–º–º–∞–Ω–¥—É '/help' –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å ‚Äº")




def parser(back_post_id, message):
    url = 'https://cryptonews.net/ru/'

    page = requests.get(url)
    soup = BeautifulSoup(page.content, 'html.parser')

    # caly site
    post = soup.find("div", class_='row news-item start-xs', id=True).text
    # print(post)

    title = soup.find("div", class_='row news-item start-xs').text.strip()
    url = soup.find("a", class_='image-wrap col-xs-12 col-sm-3', href=True)['href'].strip()
    #print(title, "\nhttps://cryptonews.net" + url)



from binance.client import Client
def price_crypto():

    api_key = binance_price.api_key
    api_secret = binance_price.api_secret

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Binance
    client = Client(api_key, api_secret)

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É Bitcoin (BTC)
    ticker_symbol = "BTCUSDT"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–∏–º–≤–æ–ª —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—Ä—ã, –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç
    ticker_info = client.get_symbol_ticker(symbol=ticker_symbol)
    current_price = float(ticker_info["price"])

    ticker_symbol1 = "ETHUSDT"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–∏–º–≤–æ–ª —Ç–æ—Ä–≥–æ–≤–æ–π –ø–∞—Ä—ã, –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç
    ticker_info = client.get_symbol_ticker(symbol=ticker_symbol1)
    current_price1 = float(ticker_info["price"])

    op_usdt = "OPUSDT"
    ticker_info = client.get_symbol_ticker(symbol=op_usdt)
    current_price3 = float(ticker_info["price"])

    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É Bitcoin
    print(f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ Bitcoin ({ticker_symbol}): {current_price} USDT")
    print(f"\n\n–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ ETH ({ticker_symbol1}): {current_price1} USDT")
    BTCUSDT = f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ Bitcoin ({ticker_symbol}): {current_price} USDT"
    ETHUSDT = f"\n–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ ETH ({ticker_symbol1}): {current_price1} USDT"
    OP = f"\n–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ OP ({op_usdt}): {current_price3} USDT"
    bot.send_message(id_chanel, f'{BTCUSDT} \n {ETHUSDT} \n {OP}')


bot.polling()
